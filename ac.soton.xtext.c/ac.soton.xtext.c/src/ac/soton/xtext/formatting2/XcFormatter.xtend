/*
 * generated by Xtext 2.25.0
 */
package ac.soton.xtext.formatting2

import ac.soton.xtext.services.XcGrammarAccess
import com.google.inject.Inject
import ecore.CProcedure
import ecore.CSourceFile
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class XcFormatter extends AbstractFormatter2 {
	
	@Inject extension XcGrammarAccess

	def dispatch void format(CSourceFile cSourceFile, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (cIncludeDirective : cSourceFile.includeDirectives) {
			cIncludeDirective.format
		}
		for (cType : cSourceFile.types) {
			cType.format
		}
		for (cVariable : cSourceFile.globalVariables) {
			cVariable.format
		}
		for (cSubProgram : cSourceFile.subPrograms) {
			cSubProgram.format
		}
	}

	def dispatch void format(CProcedure cProcedure, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (cVariable : cProcedure.localVariables) {
			cVariable.format
		}
		for (cExpression : cProcedure.body) {
			cExpression.format
		}
		for (cParameter : cProcedure.parameters) {
			cParameter.format
		}
		for (cPreCondition : cProcedure.preconditions) {
			cPreCondition.format
		}
	}
	
	// TODO: implement for CFunction, CStruct, CEnumeration
}
